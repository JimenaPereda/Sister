{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jimen\\\\desktop\\\\sister\\\\sister\\\\client\\\\src\\\\Modals\\\\BtnInfo\\\\BtnExp.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport './style.css';\n\nfunction InfoModal() {\n  const [infoIsOpen, setInfoIsOpen] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"InfoBtn\",\n    onClick: () => setInfoIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Each Button Functions\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InfoWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: infoIsOpen,\n    onRequestClose: () => setInfoIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Clooosebtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"closeBtn\",\n    onClick: () => setInfoIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"InfoTitleMod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 20\n    }\n  }, \"Each button\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"etextInfoWrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  }))))));\n}\n\nexport default InfoModal;","map":{"version":3,"sources":["C:/Users/jimen/desktop/sister/sister/client/src/Modals/BtnInfo/BtnExp.js"],"names":["React","useState","Form","Button","Row","Col","useHistory","Modal","InfoModal","infoIsOpen","setInfoIsOpen"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAoC,iBAApC;AACA,SAAQC,UAAR,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;;AAEA,SAASC,SAAT,GAAqB;AACjB,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA6BT,QAAQ,CAAC,KAAD,CAA3C;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAA4B,IAAA,OAAO,EAAE,MAAKS,aAAa,CAAC,IAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAGG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAED,UAAf;AAA2B,IAAA,cAAc,EAAG,MAAKC,aAAa,CAAC,KAAD,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAA6B,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,KAAD,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADE,CADA,eAMW;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANX,eAQW;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,eAGC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,eAIC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,eAKC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,eAMC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,eAOC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,eAQC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD,CARX,CADD,CAHH,CADA;AA8BH;;AAED,eAAeF,SAAf","sourcesContent":["import React,{ useState } from 'react';\r\nimport {Form, Button,Row, Col} from 'react-bootstrap';\r\nimport {useHistory}  from 'react-router-dom';\r\nimport Modal from 'react-modal';\r\nimport './style.css';\r\n\r\nfunction InfoModal() {\r\n    const [infoIsOpen,setInfoIsOpen] = useState(false)\r\n    return (\r\n    <div className=\"Info\">\r\n        <Button className=\"InfoBtn\" onClick={()=> setInfoIsOpen(true)}>Each Button Functions</Button>\r\n\r\n       <div className=\"InfoWrapper\">\r\n        <Modal isOpen={infoIsOpen} onRequestClose ={()=> setInfoIsOpen(false)}>\r\n        <div className=\"Clooosebtn\">\r\n\t\t\t\t\t\t<Button className=\"closeBtn\" onClick={() => setInfoIsOpen(false)}>\r\n\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n                   <h1 className=\"InfoTitleMod\">Each button</h1>\r\n\r\n                   <div className=\"etextInfoWrap\">\r\n                    <Col>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                     <Row></Row>\r\n                    </Col>\r\n                  </div>\r\n\r\n      </Modal>\r\n      </div> \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoModal;"]},"metadata":{},"sourceType":"module"}